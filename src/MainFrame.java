
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.APPROVE_OPTION;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author jigne
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }
    String selectedImagePath="";
    String updateImagePath="";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderbuttonGroup = new javax.swing.ButtonGroup();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        enameText = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        eidText = new javax.swing.JTextField();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        eageText = new javax.swing.JTextField();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        emaleButton = new javax.swing.JRadioButton();
        efemaleButton = new javax.swing.JRadioButton();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        elevelBox = new javax.swing.JComboBox<>();
        eteamBox = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel11 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel12 = new javax.swing.JLabel();
        epositionBox = new javax.swing.JComboBox<>();
        edateText = new javax.swing.JTextField();
        ephoneText = new javax.swing.JTextField();
        eemailText = new javax.swing.JTextField();
        javax.swing.JButton addButton = new javax.swing.JButton();
        javax.swing.JButton deleteButton = new javax.swing.JButton();
        javax.swing.JButton updateButton = new javax.swing.JButton();
        javax.swing.JButton clearButton = new javax.swing.JButton();
        javax.swing.JButton findButton = new javax.swing.JButton();
        javax.swing.JButton uploadimageButton = new javax.swing.JButton();
        imageLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        javax.swing.JPanel jPanel3 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel13 = new javax.swing.JLabel();
        searchBox = new javax.swing.JComboBox<>();
        searchText = new javax.swing.JTextField();
        javax.swing.JButton profileButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teamwork.png"))); // NOI18N
        jLabel1.setText("Welcome to Employee Management System");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel2.setBackground(new java.awt.Color(255, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Services", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel2.setText("Name:");

        enameText.setToolTipText("Name");

        jLabel3.setText("ID:");

        jLabel4.setText("Age:");

        eageText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eageTextActionPerformed(evt);
            }
        });

        jLabel5.setText("Gender:");

        genderbuttonGroup.add(emaleButton);
        emaleButton.setText("Male");
        emaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emaleButtonActionPerformed(evt);
            }
        });

        genderbuttonGroup.add(efemaleButton);
        efemaleButton.setText("Female");
        efemaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                efemaleButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Start Date:");

        jLabel7.setText("Level:");

        jLabel8.setText("Team Info:");

        elevelBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Executive or senior management.", "Middle management.", "First-level management.", "Intermediate or experienced (senior staff)", "Entry-level" }));

        eteamBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quality Assurance Testing Team", "Support Team", "Cyber Security Team", "SCRUM Team", "HR Team", " " }));

        jLabel9.setText("Position :");

        jLabel10.setText("Phone Number:");

        jLabel11.setText("Email:");

        jLabel12.setText("Photo:");

        epositionBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Software Developer Engineering", "Data Scientist", "Cloud Developer", "Data Analyst", "Full-Stack Web Developer", " " }));
        epositionBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                epositionBoxActionPerformed(evt);
            }
        });

        eemailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eemailTextActionPerformed(evt);
            }
        });

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-user.png"))); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/updated.png"))); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eraser.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        findButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/research.png"))); // NOI18N
        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        uploadimageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo.png"))); // NOI18N
        uploadimageButton.setText("Upload");
        uploadimageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadimageButtonActionPerformed(evt);
            }
        });

        imageLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(emaleButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(efemaleButton))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eemailText))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ephoneText))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(epositionBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eteamBox, 0, 210, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(elevelBox, 0, 1, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(edateText))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(eidText, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                        .addComponent(enameText)
                                        .addComponent(eageText))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(uploadimageButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, Short.MAX_VALUE)))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addButton, clearButton, deleteButton, findButton, updateButton});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(enameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(eidText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(eageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(emaleButton)
                    .addComponent(efemaleButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(edateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(elevelBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(eteamBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(epositionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(ephoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(eemailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uploadimageButton)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(findButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton)
                    .addComponent(updateButton))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addButton, clearButton, deleteButton, findButton, updateButton});

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Age", "Gender", "Start Date", "Level", "Team ", "Position", "Phone", "Email", "Image"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeeTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(employeeTable);

        jPanel3.setBackground(new java.awt.Color(255, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Employee", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Perpetua", 1, 18))); // NOI18N

        jLabel13.setText("Search By :");

        searchBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "ID", "Phone ", "Email" }));
        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });

        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });

        profileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/research.png"))); // NOI18N
        profileButton.setText("Search Profile");
        profileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(profileButton)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(profileButton))
                    .addComponent(searchBox))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        // TODO add your handling code here:
        String idUpdate= eidText.getText();
        DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
        boolean updatefound=true;
        Object[] rowData = new Object [employeeTable.getRowCount()];
        for (int i = 0; i < employeeTable.getRowCount(); i++) {
            rowData[i] = employeeTable.getValueAt(i, 1);
            if(rowData[i].equals(idUpdate)){
                //Setting Name
                enameText.setText((String)employeeTable.getValueAt(i,0));
                //Setting id
                eidText.setText((String)employeeTable.getValueAt(i,1));
                //Setting age
                eageText.setText((String)employeeTable.getValueAt(i,2));
                //Setting gender
                if(employeeTable.getValueAt(i,3).equals("Male")){
                    emaleButton.setSelected(true);
                }else{
                    efemaleButton.setSelected(true);
                }
                //Setting Level
                edateText.setText((String)employeeTable.getValueAt(i,4));
                String level=model.getValueAt(i,5).toString();
                switch(level){
                    case "Executive or senior management.":
                    elevelBox.setSelectedItem("Executive or senior management.");
                    break;
                    case "Middle management.":
                    elevelBox.setSelectedItem("Middle management.");
                    break;
                    case "First-level management.":
                    elevelBox.setSelectedItem("First-level management.");
                    break;
                    case "Intermediate or experienced (senior staff)":
                    elevelBox.setSelectedItem("Intermediate or experienced (senior staff)");
                    break;
                    case "Entry-level":
                    elevelBox.setSelectedItem("Entry-level");
                    break;
                   
                }

                //Setting TeamInfo
                String team =model.getValueAt(i,6).toString();
                switch(team){
                    case "Quality Assurance Testing Team":
                    eteamBox.setSelectedItem("Quality Assurance Testing Team");
                    break;
                    case "Support Team":
                    eteamBox.setSelectedItem("Support Team");
                    break;
                    case "Cyber Security Team":
                    eteamBox.setSelectedItem("Cyber Security Team");
                    break;
                    case "SCRUM Team":
                    eteamBox.setSelectedItem("SCRUM Team");
                    break;
                    case "HR Team":
                    eteamBox.setSelectedItem("HR Team");
                    break;
                    default:
                    throw new AssertionError();
                }
                //Setting Position
                String position =model.getValueAt(i,7).toString();
                switch(position){
                    case "QSoftware Developer Engineering":
                    epositionBox.setSelectedItem("Software Developer Engineering");
                    break;
                    case "Data Scientist":
                    epositionBox.setSelectedItem("Data Scientist");
                    break;
                    case "Cloud Developer":
                    epositionBox.setSelectedItem("Cloud Developer");
                    break;
                    case "Data Analyst":
                    epositionBox.setSelectedItem("Data Analyst");
                    break;
                    case "Full-Stack Web Developer":
                    epositionBox.setSelectedItem("Full-Stack Web Developer");
                    break;

                    
                    
                }
                //Setting Phone Number
                ephoneText.setText((String)employeeTable.getValueAt(i,8));
                //Setting Email
                eemailText.setText((String)employeeTable.getValueAt(i,9));
                
                String image= employeeTable.getValueAt(i,10).toString();
                ImageIcon imageicon = new ImageIcon(image);
                Image img = imageicon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
                imageLabel.setIcon(new ImageIcon(img));
                
                deleteRow();
            }
            else{
                updatefound=false;
            }
        }
        if(updatefound==false){
            JOptionPane.showMessageDialog(this,"Employee Not Found","Try Again",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clearAll();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String name = enameText.getText();
        String id= eidText.getText();
        String age = eageText.getText();
        String gender="";
        emaleButton.setActionCommand("Male");
        efemaleButton.setActionCommand("Female");
        if(genderbuttonGroup.getSelection()!=null){
            gender= genderbuttonGroup.getSelection().getActionCommand();
        }
        String date= edateText.getText();
        String level= elevelBox.getSelectedItem().toString();
        String team= eteamBox.getSelectedItem().toString();
        String position= epositionBox.getSelectedItem().toString();
        String phone= ephoneText.getText();
        String email = eemailText.getText();
        ImageIcon imageicon = new ImageIcon(selectedImagePath);
        Image img = imageicon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
        imageLabel.setIcon(new ImageIcon(img));

        //Validation
        String regex_id="[0-9]+";
        String regex_name="[a-zA-Z_ ]+";
        String regex_phone="(0|91)?[6-9][0-9]{9}";
        String regex_age="[0-9]+";
        String regex_email = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";
        String regex_date="^[0-3]?[0-9]/[0-3]?[0-9]/(?:[0-9]{2})?[0-9]{2}$";
        
        DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
        Object[] rowData = new Object [employeeTable.getRowCount()];
        for (int i = 0; i < employeeTable.getRowCount(); i++) {
            rowData[i] = employeeTable.getValueAt(i, 1);
            if(rowData[i].equals(id)){
                JOptionPane.showMessageDialog(this,"Please Enter Unique Employee ID","Try Again",JOptionPane.ERROR_MESSAGE);
            }}
        if (name.isEmpty() || id.isEmpty() || age.isEmpty() || gender.isEmpty() || date.isEmpty() || level.isEmpty() ||  team.isEmpty() || position.isEmpty() || phone.isEmpty() || email.isEmpty() ){

            JOptionPane.showMessageDialog(this,"Please Enter/Select All Fields","Try Again",JOptionPane.ERROR_MESSAGE);
            //validfound=false;
        }else if(!id.matches(regex_id)){
            JOptionPane.showMessageDialog(this,"Please Enter only Numbers in Employee ID","Try Again",JOptionPane.ERROR_MESSAGE);
            
        }else if(!name.matches(regex_name)){
            JOptionPane.showMessageDialog(this,"Please Enter Only Characters in Name Field","Try Again",JOptionPane.ERROR_MESSAGE);
        }
        else if(!phone.matches(regex_phone)){
            JOptionPane.showMessageDialog(this,"Please Enter a valid Phone Number","Try Again",JOptionPane.ERROR_MESSAGE);

       }
        else if(!age.matches(regex_age)||Integer.parseInt(age)<18||Integer.parseInt(age)>100){
            JOptionPane.showMessageDialog(this,"Please Enter a Valid Age","Try Again",JOptionPane.ERROR_MESSAGE);
       }
        else if(!date.matches(regex_date)){
        JOptionPane.showMessageDialog(this,"Please Enter a Valid Date","Try Again",JOptionPane.ERROR_MESSAGE);
        }
        else if(!email.matches(regex_email)){
           JOptionPane.showMessageDialog(this,"Please Enter a Valid Email","Try Again",JOptionPane.ERROR_MESSAGE);
        }
        else{
            model.addRow(new Object[]{name,id,age,gender,date,level,team,position,phone,email,selectedImagePath});
            clearAll();
        }
        
        

        
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String idDelete= eidText.getText();
        DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
        boolean found=true;
        Object[] rowData = new Object [employeeTable.getRowCount()];
        for (int i = 0; i < employeeTable.getRowCount(); i++) {
            rowData[i] = employeeTable.getValueAt(i, 1);
            if(rowData[i].equals(idDelete)){
                model.removeRow(i);
                found= true;
            }
            else{
                found=false;
            }
        }
        if(found==false){
            JOptionPane.showMessageDialog(this,"Employee Not Found","Try Again",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String name = enameText.getText();
        String id= eidText.getText();
        String age = eageText.getText();
        String gender="";
        emaleButton.setActionCommand("Male");
        efemaleButton.setActionCommand("Female");
        if(genderbuttonGroup.getSelection()!=null){
            gender= genderbuttonGroup.getSelection().getActionCommand();
        }
        String date= edateText.getText();
        String level= elevelBox.getSelectedItem().toString();
        String team= eteamBox.getSelectedItem().toString();
        String position= epositionBox.getSelectedItem().toString();
        String phone= ephoneText.getText();
        String email = eemailText.getText();
        
        ImageIcon imageicon = new ImageIcon(selectedImagePath);
        Image img = imageicon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
        imageLabel.setIcon(new ImageIcon(img));
        
        //Validation
        String regex_id="[0-9]+";
        String regex_name="[a-zA-Z_ ]+";
        String regex_phone="(0|91)?[6-9][0-9]{9}";
        String regex_age="[0-9]+";
        String regex_email="^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        String regex_date="^[0-3]?[0-9]/[0-3]?[0-9]/(?:[0-9]{2})?[0-9]{2}$";
        
        DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
        Object[] rowData = new Object [employeeTable.getRowCount()];
        for (int i = 0; i < employeeTable.getRowCount(); i++) {
            rowData[i] = employeeTable.getValueAt(i, 1);
            if(rowData[i].equals(id)){
                JOptionPane.showMessageDialog(this,"Please Enter Unique Employee ID","Try Again",JOptionPane.ERROR_MESSAGE);
            }}
        if (name.isEmpty() || id.isEmpty() || age.isEmpty() || gender.isEmpty() || date.isEmpty() || level.isEmpty() ||  team.isEmpty() || position.isEmpty() || phone.isEmpty() || email.isEmpty() ){

            JOptionPane.showMessageDialog(this,"Please Enter/Select All Fields","Try Again",JOptionPane.ERROR_MESSAGE);
            //validfound=false;
        }else if(!id.matches(regex_id)){
            JOptionPane.showMessageDialog(this,"Please Enter only Numbers in Employee ID","Try Again",JOptionPane.ERROR_MESSAGE);
            
        }else if(!name.matches(regex_name)){
            JOptionPane.showMessageDialog(this,"Please Enter Only Characters in Name Field","Try Again",JOptionPane.ERROR_MESSAGE);
        }
        else if(!phone.matches(regex_phone)){
            JOptionPane.showMessageDialog(this,"Please Enter a valid Phone Number","Try Again",JOptionPane.ERROR_MESSAGE);

       }
        else if(!age.matches(regex_age)||Integer.parseInt(age)<18||Integer.parseInt(age)>100){
            JOptionPane.showMessageDialog(this,"Please Enter a Valid Age","Try Again",JOptionPane.ERROR_MESSAGE);
       }
        else if(!date.matches(regex_date)){
        JOptionPane.showMessageDialog(this,"Please Enter a Valid Date","Try Again",JOptionPane.ERROR_MESSAGE);
        }
        else if(!email.matches(regex_email)){
           JOptionPane.showMessageDialog(this,"Please Enter a Valid Email","Try Again",JOptionPane.ERROR_MESSAGE);
        }
        else{
             model.addRow(new Object[]{name,id,age,gender,date,level,team,position,phone,email,selectedImagePath});
             clearAll();
        }
        


        

    }//GEN-LAST:event_addButtonActionPerformed

    private void eemailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eemailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eemailTextActionPerformed

    private void epositionBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_epositionBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_epositionBoxActionPerformed

    private void efemaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_efemaleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_efemaleButtonActionPerformed

    private void emaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emaleButtonActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_emaleButtonActionPerformed

    private void eageTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eageTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eageTextActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
//        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileButtonActionPerformed
        
        ProfileFrame profile = new ProfileFrame();
        DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
        String search= searchBox.getSelectedItem().toString();
        String searchtext = searchText.getText();
        boolean profilefound=true;
        int j = 0;
        Object[] rowData = new Object [employeeTable.getRowCount()];
        switch (search){
            case "Name":
                j= 0;
             break;
             
            case "ID":
                j=1;
             break;
             
            case "Phone":
                j=8;
             break;
             
            case "Email":
                j=9;
             break;
             
            default:
                break;
        }
        
        for (int i = 0; i < employeeTable.getRowCount(); i++){
            rowData[i] = employeeTable.getValueAt(i, j);
            if(rowData[i].equals(searchtext)){
                String name = employeeTable.getValueAt(i,0).toString();
                String id = employeeTable.getValueAt(i,1).toString();
                String age = employeeTable.getValueAt(i,2).toString();
                String gender = employeeTable.getValueAt(i,3).toString();
                String date = employeeTable.getValueAt(i,4).toString();
                String level = employeeTable.getValueAt(i,5).toString();
                String team = employeeTable.getValueAt(i,6).toString();
                String position = employeeTable.getValueAt(i,7).toString();
                String phone = employeeTable.getValueAt(i,8).toString();
                String email = employeeTable.getValueAt(i,9).toString();
                String image= employeeTable.getValueAt(i,10).toString();
                
                profile.setVisible(true);
                profile.pack();
                profile.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                
                profile.empnameText.setText(name);
                profile.empidText.setText(id);
                profile.empageText.setText(age);
                profile.empgenderText.setText(gender);
                profile.empdateText.setText(date);
                profile.emplevelText.setText(level);
                profile.empteamText.setText(team);
                profile.emppositionText.setText(position);
                profile.empphoneText.setText(phone);
                profile.empemailText.setText(email);
               
                
                ImageIcon imageicon = new ImageIcon(image);
                Image img = imageicon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
                profile.profileImage.setIcon(new ImageIcon(img));
                
                profilefound=true;
                
            }else{
                profilefound=false;
            }
            searchText.setText("");
        }
        
        if(profilefound == false){
        JOptionPane.showMessageDialog(this,"Employee Not Found","Try Again",JOptionPane.ERROR_MESSAGE);
       
        }
        
        
        
        
        
    }//GEN-LAST:event_profileButtonActionPerformed

    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed

    private void uploadimageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadimageButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser browseImageFile = new JFileChooser("C:\\Users\\Public\\Pictures\\Sample Pictures");
        //Filter image extensions
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpg", "jpeg");
        browseImageFile.addChoosableFileFilter(fnef);
        int showOpenDialogue = browseImageFile.showOpenDialog(null);
 
        if (showOpenDialogue == JFileChooser.APPROVE_OPTION) {
            File selectedImageFile = browseImageFile.getSelectedFile();
            selectedImagePath = selectedImageFile.getAbsolutePath();
            JOptionPane.showMessageDialog(null, selectedImagePath);
            //Display image on jlable
            ImageIcon ii = new ImageIcon(selectedImagePath);
            Image image = ii.getImage().getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH);
 
            imageLabel.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_uploadimageButtonActionPerformed

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextActionPerformed
    public void clearAll(){
        enameText.setText("");
        eidText.setText("");
        eageText.setText("");
        edateText.setText("");
        ephoneText.setText("");
        eemailText.setText("");
        genderbuttonGroup.clearSelection();
        imageLabel.setIcon(null);
    };
    
    public void deleteRow(){
        String idupDelete= eidText.getText();
        DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
        boolean found=true;
        Object[] rowData = new Object [employeeTable.getRowCount()];
        for (int i = 0; i < employeeTable.getRowCount(); i++) {
            rowData[i] = employeeTable.getValueAt(i, 1);
            if(rowData[i].equals(idupDelete)){
                model.removeRow(i);
                found= true;
            }
            else{
                found=false;
            }
        }
    };
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
               /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField eageText;
    private javax.swing.JTextField edateText;
    private javax.swing.JTextField eemailText;
    private javax.swing.JRadioButton efemaleButton;
    private javax.swing.JTextField eidText;
    private javax.swing.JComboBox<String> elevelBox;
    private javax.swing.JRadioButton emaleButton;
    private javax.swing.JTable employeeTable;
    private javax.swing.JTextField enameText;
    private javax.swing.JTextField ephoneText;
    private javax.swing.JComboBox<String> epositionBox;
    private javax.swing.JComboBox<String> eteamBox;
    private javax.swing.ButtonGroup genderbuttonGroup;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> searchBox;
    private javax.swing.JTextField searchText;
    // End of variables declaration//GEN-END:variables
}
